{"version":3,"sources":["firebase/common/index.js","component/common/profile/userResults.js"],"names":["fetchUser","id","a","firebaseapp","firestore","collection","doc","get","res","exists","status","data","message","UpdateBatchNoFunc","uid","batchno","update","Attendence","where","empty","val","docs","hs","joint","i","length","temp","filter","push","docid","ResultFetch","result","itemid","updateMarks","marks","FairCopyFetch","fairid","DeleteFairCopy","delete","UserResultTab","props","useState","hsResult","setHsResult","jointResult","setJointResult","error","setError","updatemarks","setUpdateMarks","useEffect","fetch","updateMarksSingle","toast","success","value","type","onChange","e","target","style","marginTop","striped","hover","bordered","map","item","index","date","Date","key","outof","getDate","getMonth","getFullYear","color","variant","onClick","fontSize"],"mappings":"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","file":"static/js/7.a141f05d.chunk.js","sourcesContent":["import { firebaseapp } from \"../init\"\r\n\r\nexport const fetchUser=async(id)=>{\r\n    try{\r\n        let res=await firebaseapp.firestore().collection('users').doc(id).get()\r\n        if(res.exists){\r\n            return{\r\n                status:200,\r\n                id:res.id,\r\n                data:res.data()\r\n            }\r\n        }else{\r\n            return{\r\n                status:400,\r\n                message:\"Invalid userid\"\r\n            }\r\n        }\r\n    }catch(err){\r\n        return{\r\n            status:400,\r\n            message:\"Error occured: \"+err.message\r\n        }\r\n    }\r\n}\r\nexport const UpdateBatchNoFunc=async(uid,batchno)=>{\r\n    try{\r\n        await firebaseapp.firestore().collection('users').doc(uid).update({\r\n            batchno\r\n        })\r\n        return{\r\n            status:200,\r\n            message:\"Successfully updated batch no\"\r\n        }\r\n    }catch(err){\r\n        return{\r\n            status:400,\r\n            message:\"Error occured: \"+err.message\r\n        }\r\n    }\r\n}\r\n\r\nexport const Attendence=async(uid)=>{\r\n    try{\r\n        let res=await firebaseapp.firestore().collection('attendence').where(\"id\",\"==\",uid).get()\r\n        if(!res.empty){\r\n            let val=res.docs\r\n            let hs=[]\r\n            let joint=[]\r\n            for(let i=0;i<val.length;i++){\r\n                let id=val[i].id\r\n                let temp=val[i].data()\r\n                if(temp.filter===\"HS\"){\r\n                    hs.push({docid:id,...temp})\r\n                }else{\r\n                    joint.push({docid:id,...temp})\r\n                }\r\n            }\r\n            return{\r\n                status:200,\r\n                hs,\r\n                joint\r\n            }\r\n        }else{\r\n            return{\r\n                status:400,\r\n                message:\"No data found\"\r\n            }\r\n        }\r\n    }catch(err){\r\n        return{\r\n            status:400,\r\n            message:\"Error occured: \"+err.message\r\n        }\r\n    }\r\n}\r\n\r\nexport const ResultFetch=async(uid)=>{\r\n    try{\r\n        let result=await firebaseapp.firestore().collection('results').where(\"id\",\"==\",uid).get()\r\n        if(!result.empty){\r\n            let val=result.docs\r\n            let hs=[]\r\n            let joint=[]    \r\n            for(let i=0;i<val.length;i++){\r\n                let id=val[i].id\r\n                if(val[i].data().filter===\"HS\"){\r\n                    hs.push({itemid:id,...val[i].data()})\r\n                }else{\r\n                    joint.push({itemid:id,...val[i].data()})\r\n                }\r\n            }\r\n            return{\r\n                status:200,\r\n                hs,\r\n                joint\r\n            }\r\n        }else{\r\n            return{\r\n                status:400,\r\n                message:\"No data found\"\r\n            }\r\n        }\r\n    }catch(err){\r\n        return{\r\n            status:400,\r\n            message:\"Error occured: \"+err.message\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateMarks=async(id,marks)=>{\r\n    try{\r\n        await firebaseapp.firestore().collection('results').doc(id).update({\r\n            marks:marks\r\n        })\r\n        return{\r\n            status:200,\r\n            message:\"Successfully updated\"\r\n        }\r\n    }catch(err){\r\n        return{\r\n            status:400,\r\n            message:\"Error occured: \"+err.message\r\n        }\r\n    }\r\n}\r\n\r\nexport const FairCopyFetch=async(uid)=>{\r\n    try{\r\n        let val=await firebaseapp.firestore().collection('faircopy').where(\"id\",\"==\",uid).get()\r\n        if(!val.empty){\r\n            let docs=val.docs\r\n            let hs=[]\r\n            let joint=[]\r\n            for(let i=0;i<docs.length;i++){\r\n                let temp=docs[i].data()\r\n                let id=docs[i].id\r\n                if(temp.filter===\"HS\"){\r\n                    hs.push({fairid:id,...temp})\r\n                }else{\r\n                    joint.push({fairid:id,...temp})\r\n                }\r\n            }\r\n            return{\r\n                status:200,\r\n                hs,\r\n                joint\r\n            }\r\n        }else{\r\n            return{\r\n                status:400,\r\n                message:\"No data found\"\r\n            }\r\n        }\r\n    }catch(err){\r\n        return{\r\n            status:400,\r\n            message:\"Error occured: \"+err.message\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteFairCopy=async(id)=>{\r\n    try{    \r\n        await firebaseapp.firestore().collection('faircopy').doc(id).delete()\r\n        return{\r\n            status:200,\r\n            message:\"Successfully deleted\"\r\n        }\r\n    }catch(err){\r\n        return{\r\n            status:400,\r\n            message:\"Error occured: \"+err.message\r\n        }\r\n    }\r\n}","import React, { useState,useEffect } from 'react'\r\nimport {Table,Row,Col} from 'reactstrap'\r\nimport { ResultFetch,updateMarks } from '../../../firebase/common'\r\nimport {Button, Dialog, Input} from '@material-ui/core'\r\nimport { toast } from 'react-toastify'\r\nexport default function UserResultTab(props){\r\n    const [hsResult,setHsResult]=useState([])\r\n    const [jointResult,setJointResult]=useState([])\r\n    const [error,setError]=useState(\"\")\r\n    const [updatemarks,setUpdateMarks]=useState(0)\r\n    useEffect(()=>{\r\n        fetch()\r\n    },[props.uid])\r\n    const fetch=async()=>{\r\n        const {uid}=props\r\n        if(uid){\r\n            let val=await ResultFetch(uid)\r\n            if(val.status==200){\r\n                setHsResult(val.hs)\r\n                setJointResult(val.joint)\r\n                setUpdateMarks(0)\r\n            }else{\r\n                setError(val.message)\r\n            }\r\n        }\r\n    }\r\n    const updateMarksSingle=async(id)=>{\r\n        const res=await updateMarks(id,updatemarks)\r\n        if(res.status==200){\r\n            toast.success(res.message)\r\n            fetch()\r\n        }else{\r\n            setError(res.message)\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n        <label>The number whatever you want to update</label>\r\n        <br/>\r\n        <Input value={updatemarks} type=\"number\" onChange={(e)=>{\r\n                setUpdateMarks(e.target.value)\r\n            }}/>\r\n            <br/>\r\n            <Row style={{marginTop:10}}>\r\n            {hsResult.length>0&&<Col>\r\n            <Table striped hover bordered>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            #\r\n                        </th>\r\n                        <th>Marks</th>\r\n                        <th>Out of Marks</th>\r\n                        <th>Date</th>\r\n                        <th>Update</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {hsResult.map((item,index)=>{\r\n                        let date=new Date(item.date)\r\n                        return(\r\n                        <tr key={index}>\r\n                            <td>{index+1}</td>\r\n                            <td>{item.marks}</td>\r\n                            <td>{item.outof}</td>\r\n                            <td>{date.getDate()}-{date.getMonth()+1}-{date.getFullYear()}</td>\r\n                            <td><Button color=\"primary\" variant=\"outlined\" onClick={()=>{\r\n                                updateMarksSingle(item.itemid)\r\n                            }}>Update</Button></td>\r\n                        </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n            </Col>}\r\n            {jointResult.length>0&&<Col>\r\n            <Table striped hover bordered>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            #\r\n                        </th>\r\n                        <th>Marks</th>\r\n                        <th>Out of Marks</th>\r\n                        <th>Date</th>\r\n                        <th>Update</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {jointResult.map((item,index)=>{\r\n                        let date=new Date(item.date)\r\n                        return(\r\n                            <tr key={index}>\r\n                            <td>{index+1}</td>\r\n                            <td>{item.marks}</td>\r\n                            <td>{item.outof}</td>\r\n                            <td>{date.getDate()}-{date.getMonth()+1}-{date.getFullYear()}</td>\r\n                            <td><Button color=\"primary\" variant=\"outlined\" onClick={()=>{\r\n                                updateMarksSingle(item.itemid)\r\n                            }}>Update</Button></td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n            </Col>}\r\n            </Row>\r\n            {error&&<p style={{color:\"red\",fontSize:20}}>{error}</p>}\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}