{"version":3,"sources":["component/users/notices/fullScreenDialog.js","component/users/notices/singleNotice.js"],"names":["useStyles","makeStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","Slide","direction","FullScreenDialog","classes","useState","pagenumber","setPageNumber","numpages","setNumberPages","useEffect","document","getElementsByClassName","oncontextmenu","toast","error","handleClose","setOpen","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","className","Toolbar","IconButton","edge","color","onClick","aria-label","Typography","variant","style","justifyContent","Button","warn","file","docs","onLoadSuccess","numPages","onLoadError","err","console","log","message","pageNumber","SingleNotice","date","Date","time","display","alignSelf","width","padding","fontSize","id","text","textDecoration","cursor","getDate","getMonth","getFullYear"],"mappings":"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","file":"static/js/10.8c3208c9.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Page } from 'react-pdf';\r\nimport { Document } from 'react-pdf/dist/entry.webpack';\r\nimport {toast} from 'react-toastify'\r\nimport {Button} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog(props) {\r\n  const classes = useStyles();\r\n  const [pagenumber,setPageNumber]=useState(1)\r\n  const [numpages,setNumberPages]=useState(null)\r\n  useEffect(()=>{\r\n    if(numpages){\r\n      document.getElementsByClassName(\"canvas-docs\")[0].oncontextmenu=function(){toast.error(\"Please do not tamper pdf\");return false}\r\n    }\r\n  },[numpages])\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n  const onDocumentLoadSuccess=({numPages})=>{\r\n    setNumberPages(numPages)\r\n  }\r\n  const goToPrev=()=>{\r\n    if(pagenumber!=1){\r\n      setPageNumber(pagenumber-1)\r\n    }else{\r\n      toast.warn(\"You are at the bigining of the pdf file\")\r\n    }\r\n  }\r\n  const goToNext=()=>{\r\n    if(pagenumber!=numpages){\r\n      setPageNumber(pagenumber+1)\r\n    }else{\r\n      toast.warn(\"You have reached on the last page\")\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Document\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <br/>\r\n        <div className=\"row\" style={{justifyContent:\"center\"}}>\r\n        <Button onClick={goToPrev} color=\"primary\" variant=\"contained\">Prev</Button>\r\n        <Button onClick={goToNext}  color=\"secondary\" variant=\"contained\" style={{marginLeft:10}}>Next</Button>\r\n        </div>\r\n        <Document\r\n        file={props.docs?props.docs:null}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n        onLoadError={(err)=>{\r\n          console.log(err.message)\r\n        }}\r\n        className=\"canvas-docs\"\r\n        >\r\n          <Page pageNumber={pagenumber}/>\r\n        </Document>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState} from 'react'\r\nimport FullScreenDialog from './fullScreenDialog'\r\n\r\nconst SingleNotice=(props)=>{\r\n    const [open,setOpen]=useState(false)\r\n    const date=new Date(props.time)\r\n    const onFileOpen=()=>{\r\n        if(props.docs)\r\n        {\r\n            setOpen(!open)\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"col-lg-4\">\r\n        <div style={{justifyContent:'center',display:'flex'}}>\r\n            <div className=\"login-card\" style={{alignSelf:'center',width:'80%',padding:30}}>\r\n                <p style={{color:'gray',fontSize:20}}>{props.id}</p>\r\n                {props.text&&<p style={{color:'gray',fontSize:20}}>{props.text}</p>}\r\n                {props.docs&&<p style={{color:\"blue\",fontSize:18,textDecoration:'underline',cursor:'pointer'}} onClick={onFileOpen}>{!open?\"open docs\":\"close docs\"}</p>}\r\n                {/* {props.docs&&<a href={`/pdf/?path=\"${props.docs}\"`}>Open docs</a>} */}\r\n                {props.time&&<p style={{color:\"gray\",fontSize:18}}>Date:  {date.getDate()}/{date.getMonth()+1}/{date.getFullYear()}</p>}\r\n            </div>\r\n        </div>\r\n        <br/>\r\n        <div style={{justifyContent:'center',display:'flex'}} id=\"disable-iframe\">\r\n        {open&&<FullScreenDialog open={open} setOpen={setOpen} docs={props.docs}/>}\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        </div>\r\n    );\r\n}\r\nexport default SingleNotice;"],"sourceRoot":""}